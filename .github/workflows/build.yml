on:
  push:
    branches:
      - main
      - dev
      - release/*
      - test
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: ${{ matrix.shell }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows
            os: windows-2022
            shell: bash
            tauri_args: ""
          - platform: macos
            os: macos-latest
            shell: sh
            tauri_args: --target x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Prepare environment variables
        run: |
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "APP_VERSION=`node -p "require('./loader/package.json').version"`" >> $GITHUB_ENV

      - name: Install Rust targets for Intel-based macOS
        if: runner.os == 'macOS'
        run: |
          rustup target add x86_64-apple-darwin

      - name: Setup MSBuild
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.os == 'macos-latest' && 'x86_64-apple-darwin' || '' }}

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "loader/src-tauri -> target"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: |
            - recursive: true

      - name: Build preload plugins
        run: |
          cd plugins
          pnpm build

      - name: Build core (windows)
        if: runner.os == 'Windows'
        run: msbuild.exe pengu.sln -t:build -p:Configuration=Release -p:Platform=x64

      - name: Build core (macos)
        if: runner.os == 'macOS'
        run: make release

      - name: Build loader
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: "loader"
          args: ${{ matrix.tauri_args }}

      - name: Move loader output (windows)
        if: runner.os == 'Windows'
        run: |
          cp "loader/src-tauri/target/release/Pengu Loader.exe" bin/

      - name: Move loader output (macos)
        if: runner.os == 'macOS'
        run: |
          cp -r "loader/src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Pengu Loader.app" bin/
          cp "loader/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/"*.dmg bin/

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: pengu-v${{ env.APP_VERSION }}-dev-${{ env.SHORT_SHA }}-${{ matrix.platform }}
          path: |
            bin/
            !bin/obj/
